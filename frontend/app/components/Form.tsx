"use client";

import React, { useState } from "react";
import { jwtDecode } from "jwt-decode";
import axios from "axios";

// Interfaces for Type-checking data
interface MatchedTeacher {
  name: string;
  tid: number;
  reason: string;
}

interface DecodedToken {
  sub: string;
  role: "student" | "teacher";
  exp: number;
}

interface DuplicateProject {
  topic: string;
  reason: string;
  uuid?: string; // Optional since not all items might have it
  tid?: number | null;
}

interface ApiResponseData {
  topic: string;
  reason: string;
  uuid: string;
  tid: number;
}

interface FullApiResponse {
  status: string;
  data: (ApiResponseData | { match_teacher: MatchedTeacher[] })[];
}

const Form = () => {
  // State for form fields
  const [projectTitle, setProjectTitle] = useState<string>("");
  const [projectDescription, setProjectDescription] = useState<string>("");
  const [academicYear, setAcademicYear] = useState<string>("");
  const [advisorId, setAdvisorId] = useState<string>(""); // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠ State ‡∏à‡∏≤‡∏Å advisorName ‡πÄ‡∏õ‡πá‡∏ô advisorId ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏™‡∏≠‡∏î‡∏Ñ‡∏•‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö // State for data from the API

  const [duplicateProjectsA, setDuplicateProjectsA] = useState<
    DuplicateProject[]
  >([]);
  const [matchedTeachersA, setMatchedTeachersA] = useState<MatchedTeacher[]>(
    []
  );

  const [duplicateProjectsB, setDuplicateProjectsB] = useState<
    DuplicateProject[]
  >([]);
  const [matchedTeachersB, setMatchedTeachersB] = useState<MatchedTeacher[]>(
    []
  );

  const [timeA, setTimeA] = useState<number | null>(null);
  const [timeB, setTimeB] = useState<number | null>(null);

  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [showSuccessMessage, setShowSuccessMessage] = useState<boolean>(false);
  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);
  const [submissionError, setSubmissionError] = useState<string | null>(null);
  const [submissionSuccess, setSubmissionSuccess] = useState<boolean>(false);

  const processApiResult = (
    apiResponse: FullApiResponse
  ): { projects: DuplicateProject[]; teachers: MatchedTeacher[] } => {
    const projects: DuplicateProject[] = [];
    const teachers: MatchedTeacher[] = [];

    if (apiResponse.data && apiResponse.data.length > 0) {
      apiResponse.data.forEach((item) => {
        if ("match_teacher" in item) {
          // ‡πÄ‡∏û‡∏¥‡πà‡∏° tid ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
          teachers.push(...item.match_teacher);
        } else {
          projects.push({ topic: item.topic, reason: item.reason });
        }
      });
    }
    return { projects, teachers };
  };

  const fetchSuggestions = async () => {
    if (projectTitle.length > 3 || projectDescription.length > 10) {
      setIsLoading(true);
      setShowSuccessMessage(false);

      // üõë ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô üõë
      setTimeA(null);
      setTimeB(null);

      // 1. ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà 1 (check-first-ai) ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤
      const callA = async () => {
        const startTime = performance.now(); // ‚è∞ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤
        try {
          const response = await fetch(
            `${process.env.NEXT_PUBLIC_API_BASE_URL}/api/topics/check-first-ai`,
            {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({
                topic: projectTitle,
                description: projectDescription,
              }),
            }
          );
          const data: FullApiResponse = await response.json();
          const endTime = performance.now(); // ‚è∞ ‡∏´‡∏¢‡∏∏‡∏î‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤

          const result = processApiResult(data);
          setDuplicateProjectsA(result.projects);
          setMatchedTeachersA(result.teachers);
          setTimeA(parseFloat((endTime - startTime).toFixed(2))); // üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏ß‡∏•‡∏≤
          return {
            projects: result.projects.length,
            teachers: result.teachers.length,
          };
        } catch (error) {
          console.error("AI 1 Failed:", error);
          setDuplicateProjectsA([]); // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡πÄ‡∏â‡∏û‡∏≤‡∏∞ state ‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á
          setMatchedTeachersA([]);
          setTimeA(0); // ‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡πá‡∏ô 0 ‡∏´‡∏£‡∏∑‡∏≠ Error
          return { projects: 0, teachers: 0 };
        }
      };

      // 2. ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà 2 (check-secound-ai) ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤
      const callB = async () => {
        const startTime = performance.now(); // ‚è∞ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤
        try {
          const response = await fetch(
            `${process.env.NEXT_PUBLIC_API_BASE_URL}/api/topics/check-secound-ai`,
            {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({
                topic: projectTitle,
                description: projectDescription,
              }),
            }
          );
          const data: FullApiResponse = await response.json();
          const endTime = performance.now(); // ‚è∞ ‡∏´‡∏¢‡∏∏‡∏î‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤

          const result = processApiResult(data);
          setDuplicateProjectsB(result.projects);
          setMatchedTeachersB(result.teachers);
          setTimeB(parseFloat((endTime - startTime).toFixed(2))); // üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏ß‡∏•‡∏≤
          return {
            projects: result.projects.length,
            teachers: result.teachers.length,
          };
        } catch (error) {
          console.error("AI 2 Failed:", error);
          setDuplicateProjectsB([]);
          setMatchedTeachersB([]);
          setTimeB(0); // ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏õ‡πá‡∏ô 0 ‡∏´‡∏£‡∏∑‡∏≠ -1 ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏∞‡∏ö‡∏∏‡∏ß‡πà‡∏≤‡πÄ‡∏Å‡∏¥‡∏î Error
          return { projects: 0, teachers: 0 };
        }
      };

      try {
        // 3. ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏≠‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏ö‡∏ö‡∏Ç‡∏ô‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏£‡∏≠‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
        const [resultA_Count, resultB_Count] = await Promise.all([
          callA(),
          callB(),
        ]);

        // ‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á Success Message ‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏±‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏£‡∏ß‡∏°
        const totalProjects = resultA_Count.projects + resultB_Count.projects;
        const totalTeachers = resultA_Count.teachers + resultB_Count.teachers;

        if (totalProjects === 0 && totalTeachers === 0) {
          setShowSuccessMessage(true);
        } else {
          setShowSuccessMessage(false);
        }
      } catch (error) {
        // Promise.all ‡∏à‡∏∞ catch error ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ promise ‡∏ï‡∏±‡∏ß‡πÉ‡∏î‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏∂‡πà‡∏á throw error
        console.error(
          "An unexpected error occurred during parallel API calls:",
          error
        );
      } finally {
        setIsLoading(false);
      }
    } else {
      // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå State ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô
      setDuplicateProjectsA([]);
      setMatchedTeachersA([]);
      setTimeA(null);
      setDuplicateProjectsB([]);
      setMatchedTeachersB([]);
      setTimeB(null);
      setShowSuccessMessage(false);
    }
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setIsSubmitting(true);
    setSubmissionError(null);
    setSubmissionSuccess(false);

    const token = localStorage.getItem("access_token");
    if (!token) {
      setSubmissionError("Please log in to submit a project.");
      setIsSubmitting(false);
      return;
    }

    try {
      const decoded: DecodedToken = jwtDecode(token);
      const userID = decoded.sub;

      const userResponse = await axios.get<{ teamid: string }>(
        `${process.env.NEXT_PUBLIC_API_BASE_URL}/permission/get-student-team/${userID}`
      );
      console.log(userResponse.data);
      const teamID = userResponse.data.teamid;
      console.log(teamID);
      const response = await axios.post(
        `${process.env.NEXT_PUBLIC_API_BASE_URL}/api/topics/projects/submit`,
        {
          teamid: teamID, // ‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß
          name: projectTitle, // ‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß
          tid: parseInt(advisorId), // ‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß
          academic_year: parseInt(academicYear), // ‚úÖ ‡∏ñ‡∏π‡∏Å
        },
        {
          headers: {
            Authorization: `Bearer ${token}`,
          },
        }
      );

      if (response.status === 200) {
        setSubmissionSuccess(true); // Clear form fields after successful submission
        setProjectTitle("");
        setProjectDescription("");
        setAcademicYear("");
        setAdvisorId("");

        setDuplicateProjectsA([]);
        setMatchedTeachersA([]);
        setDuplicateProjectsB([]);
        setMatchedTeachersB([]);
        setTimeA(null); // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå Time state ‡∏î‡πâ‡∏ß‡∏¢
        setTimeB(null); // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå Time state ‡∏î‡πâ‡∏ß‡∏¢
        setShowSuccessMessage(false);
      }
    } catch (error) {
      console.error("Error submitting project:", error);
      if (
        axios.isAxiosError(error) &&
        error.response &&
        error.response.status === 409
      ) {
        setSubmissionError(error.response.data.detail);
      } else {
        setSubmissionError("An error occurred. Please try again.");
      }
    } finally {
      setIsSubmitting(false);
    }
  };

  const handleCheckTopic = () => {
    fetchSuggestions();
  };

  return (
    <div className="layout-content-container flex flex-col w-[512px] py-5 max-w-[960px] flex-1">
      {/* ... (Your form elements are unchanged) ... */}
      <form onSubmit={handleSubmit}>
        <div className="py-4">
          <p className="text-[#111418] tracking-light text-[30px] font-bold leading-tight min-w-72">
            ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏ô‡∏≠‡πÇ‡∏Ñ‡∏£‡∏á‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà
          </p>
        </div>

        {/* Input Field ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Project Title */}
        <div className="flex max-w-[480px] flex-wrap items-end gap-4 px-4 py-3">
          <label className="flex flex-col min-w-40 flex-1">
            <p className="text-[#111418] text-base font-medium leading-normal pb-2">
              ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÇ‡∏Ñ‡∏£‡∏á‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏™‡∏ô‡∏≠
            </p>
            <input
              placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÇ‡∏Ñ‡∏£‡∏á‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì"
              className="form-input flex w-full min-w-0 flex-1 resize-none overflow-hidden rounded-lg text-[#111418] focus:outline-0 focus:ring-0 border-none bg-[#f0f2f5] focus:border-none h-14 placeholder:text-[#60758a] p-4 text-base font-normal leading-normal"
              value={projectTitle}
              onChange={(e) => setProjectTitle(e.target.value)}
              required
            />
          </label>
        </div>
        <div className="flex max-w-[480px] flex-wrap items-end gap-4 px-4 py-3">
          <label className="flex flex-col min-w-40 flex-1">
            <p className="text-[#111418] text-base font-medium leading-normal pb-2">
              ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢
            </p>
            <textarea
              placeholder="‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏á‡∏≤‡∏ô‡∏û‡∏≠‡∏™‡∏±‡∏á‡πÄ‡∏Ç‡∏õ"
              className="form-input flex w-full min-w-0 flex-1 resize-none overflow-hidden rounded-lg text-[#111418] focus:outline-0 focus:ring-0 border-none bg-[#f0f2f5] focus:border-none min-h-36 placeholder:text-[#60758a] p-4 text-base font-normal leading-normal"
              value={projectDescription}
              onChange={(e) => setProjectDescription(e.target.value)}
            ></textarea>
          </label>
        </div>
        {/* Select Field ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤ */}
        <div className="flex max-w-[480px] flex-wrap items-end gap-4 px-4 py-3">
          <label className="flex flex-col min-w-40 flex-1">
            <p className="text-[#111418] text-base font-medium leading-normal pb-2">
              ‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤
            </p>
            <select
              className={`form-input flex w-full min-w-0 flex-1 resize-none overflow-hidden rounded-lg focus:outline-0 focus:ring-0 border-none bg-[#f0f2f5] focus:border-none h-14 bg-[image:--select-button-svg] placeholder:text-[#60758a] p-4 text-base font-normal leading-normal text-[#111418]`}
              value={advisorId}
              onChange={(e) => setAdvisorId(e.target.value)}
              required
            >
              <option value="" className="text-gray-400">
                ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå
              </option>
              <option value="2">‡∏ú‡∏®.‡∏î‡∏ß‡∏¥‡∏© ‡πÅ‡∏™‡∏ô‡πÇ‡∏†‡∏ä‡∏ô‡πå</option>
              <option value="3">‡∏≠.‡πÄ‡∏ä‡∏≤‡∏ß‡∏ô‡πå ‡∏õ‡∏≠‡πÅ‡∏Å‡πâ‡∏ß</option>
              <option value="1">‡∏î‡∏£.‡∏ì‡∏±‡∏ê‡∏û‡∏• ‡∏´‡∏≤‡∏ç‡∏™‡∏°‡∏∏‡∏ó‡∏£</option>
              <option value="7">‡∏î‡∏£.‡∏™‡∏∏‡∏à‡∏¥‡∏ï‡∏ï‡∏£‡∏≤ ‡∏™‡∏≤‡∏£‡∏∞‡∏Ñ‡∏ô‡∏ò‡πå</option>
              <option value="4">‡∏î‡∏£.‡∏≠‡∏†‡∏¥‡∏ß‡∏±‡∏í‡∏ô‡πå ‡∏ö‡∏∏‡∏ï‡∏£‡∏ß‡∏á‡∏Ñ‡πå</option>
              <option value="5">‡∏≠.‡∏ä‡∏•‡∏ï‡∏¥‡∏û‡∏±‡∏ô‡∏ò‡πå  ‡πÄ‡∏õ‡∏•‡πà‡∏á‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤</option>
              <option value="6">‡∏≠.‡πÄ‡∏°‡∏ò‡∏¢‡∏≤ ‡∏£‡∏≤‡∏ä‡∏Ñ‡∏°‡∏ô‡πå</option>
            </select>
          </label>
        </div>
        {/* Input Field ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Academic Year */}
        <div className="flex max-w-[480px] flex-wrap items-end gap-4 px-4 py-3">
          <label className="flex flex-col min-w-40 flex-1">
            <p className="text-[#111418] text-base font-medium leading-normal pb-2">
              ‡∏õ‡∏µ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤
            </p>
            <input
              placeholder="‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡πÇ‡∏Ñ‡∏£‡∏á‡∏á‡∏≤‡∏ô (‡∏û.‡∏®.)"
              className="form-input flex w-full min-w-0 flex-1 resize-none overflow-hidden rounded-lg text-[#111418] focus:outline-0 focus:ring-0 border-none bg-[#f0f2f5] focus:border-none h-14 placeholder:text-[#60758a] p-4 text-base font-normal leading-normal"
              value={academicYear}
              onChange={(e) => setAcademicYear(e.target.value)}
              required
            />
          </label>
        </div>
        {/* Check Topic Button */}
        <div className="flex justify-stretch">
          <div className="flex flex-1 gap-3 flex-wrap px-4 py-3 justify-start">
            <button
              onClick={handleCheckTopic}
              type="button"
              className="flex min-w-[84px] max-w-[480px] cursor-pointer items-center justify-center overflow-hidden rounded-lg h-10 px-4 bg-[#7D91A6] text-white text-sm font-bold leading-normal tracking-[0.015em]"
              disabled={isLoading || isSubmitting}
            >
              <span className="truncate">
                {isLoading ? "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö..." : "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠"}
              </span>
            </button>
          </div>
        </div>
        {/* Section for Potential Duplicates and Teachers */}
        <h3 className="text-[#111418] text-lg font-bold leading-tight tracking-[-0.015em] px-4 pb-2 pt-4">
          ‡πÇ‡∏Ñ‡∏£‡∏á‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡πÄ‡∏Å‡∏¥‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ã‡πâ‡∏≥‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢
        </h3>
        <p className="text-[#60758a] text-base font-normal leading-normal pb-8 pt-1 px-4 border-b border-gray-200 last:border-b-0 ">
          ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤‡∏û‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢‡∏Å‡∏±‡∏ô
          ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÇ‡∏î‡∏î‡πÄ‡∏î‡πà‡∏ô
        </p>
        {/* Conditional Rendering based on state */}
        {isLoading ? (
          <div className="p-4 text-gray-500">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</div>
        ) : showSuccessMessage ? (
          <div className="p-4 text-green-600">
            üéâ ‡∏¢‡∏≠‡∏î‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°! ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ã‡πâ‡∏≥‡∏ã‡πâ‡∏≠‡∏ô‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö AI ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
            ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö!{" "}
          </div>
        ) : (
          <>
            {/* üõë FIX 1: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô (Initial State) üõë */}
            {timeA === null && timeB === null ? (
              <div className="p-4 text-gray-500 text-center text-base">
                ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°{" "}
                <span className="font-bold text-[#111418]">
                  "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠"
                </span>{" "}
                ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö AI
              </div>
            ) : (
              // 2. ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÅ‡∏ö‡∏ö‡πÅ‡∏ö‡πà‡∏á‡∏Ñ‡∏£‡∏∂‡πà‡∏á‡∏ï‡πà‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÅ‡∏•‡πâ‡∏ß (timeA ‡∏´‡∏£‡∏∑‡∏≠ timeB ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà null)
              <div className="flex flex-col md:flex-row md:space-x-4">
                {/* ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏à‡∏≤‡∏Å AI ‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà 1 */}
                <div className="flex-1 p-4 border-b md:border-b-0 md:border-r border-gray-200">
                  {/* ‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏±‡∏ß (‡∏£‡∏ß‡∏°‡πÄ‡∏ß‡∏•‡∏≤) - ‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏î‡∏¥‡∏° */}
                  <div className="flex justify-between items-baseline">
                    <h3 className="text-[#111418] text-lg font-bold leading-tight tracking-[-0.015em] pb-2">
                      ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏à‡∏≤‡∏Å AI ‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏µ‡πà 1
                    </h3>
                    {timeA !== null && (
                      <p
                        className={`text-sm font-semibold ${
                          timeA > 0 ? "text-blue-600" : "text-red-600"
                        }`}
                      >
                        {timeA > 0 ? `üöÄ ${timeA} ms` : "‚ùå Failed"}
                      </p>
                    )}
                  </div>

                  <p className="text-[#60758a] text-sm font-normal leading-normal pb-4">
                    ‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏µ‡πà 1 (GPT-OSS-120B: ‡πÄ‡∏ô‡πâ‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥‡∏™‡∏π‡∏á
                    ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏ä‡∏¥‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏°‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏£‡∏≠‡∏ö‡∏î‡πâ‡∏≤‡∏ô) :
                  </p>

                  {/* Display Duplicate Projects A */}
                  {duplicateProjectsA.length > 0 ? (
                    <>
                      <h4 className="font-bold text-gray-700 mt-2">
                        ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ã‡πâ‡∏≥‡∏ã‡πâ‡∏≠‡∏ô: ({duplicateProjectsA.length}{" "}
                        ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)
                      </h4>
                      {duplicateProjectsA.slice(0, 3).map((project, index) => (
                        <div
                          key={`A-proj-${index}`}
                          className="p-4 border-b border-gray-100 last:border-b-0"
                        >
                          <p className="text-[#111418] text-base font-bold leading-tight">
                            {project.topic}
                          </p>
                          <p className="text-[#60758a] text-sm font-normal leading-normal">
                            {project.reason}
                          </p>
                        </div>
                      ))}
                    </>
                  ) : (
                    // üõë FIX 2: ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° "‡πÑ‡∏°‡πà‡∏û‡∏ö" ‡∏Å‡πá‡∏ï‡πà‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (timeA > 0) ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô üõë
                    timeA !== null &&
                    timeA > 0 && (
                      <>
                        <h4 className="font-bold text-gray-700 mt-2">
                          ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ã‡πâ‡∏≥‡∏ã‡πâ‡∏≠‡∏ô: ({duplicateProjectsA.length}{" "}
                          ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)
                        </h4>
                        <div className="text-sm text-green-500 mt-2">
                          ‚úÖ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏ã‡πâ‡∏≥‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏µ‡πà 1
                        </div>
                      </>
                    )
                  )}

                  {/* Display Matched Teachers A - ‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏î‡∏¥‡∏° */}
                  {matchedTeachersA.length > 0 && (
                    <>
                      <h4 className="font-bold text-gray-700 mt-4">
                        ‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥: ({matchedTeachersA.length} ‡∏ó‡πà‡∏≤‡∏ô)
                      </h4>
                      {matchedTeachersA.slice(0, 3).map((teacher, index) => (
                        <div
                          key={`A-teacher-${index}`}
                          className="p-4 border-b border-gray-100 last:border-b-0"
                        >
                          <p className="text-[#111418] text-base font-bold leading-tight">
                            {teacher.name}
                          </p>
                          <p className="text-[#60758a] text-sm font-normal leading-normal">
                            ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•: {teacher.reason}
                          </p>
                        </div>
                      ))}
                    </>
                  )}

                  {/* üõë FIX 3: ‡πÅ‡∏™‡∏î‡∏á Error ‡∏´‡∏≤‡∏Å timeA ‡πÄ‡∏õ‡πá‡∏ô 0 üõë */}
                  {timeA === 0 && (
                    <div className="text-sm text-red-500 mt-2">
                      ‚ùå ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏µ‡πà 1 ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
                    </div>
                  )}
                </div>

                {/* ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏à‡∏≤‡∏Å AI ‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà 2 - ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡πÄ‡∏ä‡πà‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô */}
                <div className="flex-1 p-4">
                  {/* ‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏±‡∏ß (‡∏£‡∏ß‡∏°‡πÄ‡∏ß‡∏•‡∏≤) - ‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏î‡∏¥‡∏° */}
                  <div className="flex justify-between items-baseline">
                    <h3 className="text-[#111418] text-lg font-bold leading-tight tracking-[-0.015em] pb-2 mt-4 md:mt-0">
                      ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏à‡∏≤‡∏Å AI ‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏µ‡πà 2
                    </h3>
                    {timeB !== null && (
                      <p
                        className={`text-sm font-semibold ${
                          timeB > 0 ? "text-blue-600" : "text-red-600"
                        }`}
                      >
                        {timeB > 0 ? `üöÄ ${timeB} ms` : "‚ùå Failed"}
                      </p>
                    )}
                  </div>

                  <p className="text-[#60758a] text-sm font-normal leading-normal pb-4">
                    ‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏µ‡πà 2 (Grok-4-Fast: ‡πÄ‡∏ô‡πâ‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•
                    ‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà‡∏Ñ‡∏≥‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏µ‡πà‡∏£‡∏ß‡∏î‡πÄ‡∏£‡πá‡∏ß) :
                  </p>

                  {/* Display Duplicate Projects B */}
                  {duplicateProjectsB.length > 0 ? (
                    <>
                      <h4 className="font-bold text-gray-700 mt-2">
                        ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ã‡πâ‡∏≥‡∏ã‡πâ‡∏≠‡∏ô: ({duplicateProjectsB.length}{" "}
                        ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)
                      </h4>
                      {duplicateProjectsB.slice(0, 3).map((project, index) => (
                        <div
                          key={`B-proj-${index}`}
                          className="p-4 border-b border-gray-100 last:border-b-0"
                        >
                          <p className="text-[#111418] text-base font-bold leading-tight">
                            {project.topic}
                          </p>
                          <p className="text-[#60758a] text-sm font-normal leading-normal">
                            {project.reason}
                          </p>
                        </div>
                      ))}
                    </>
                  ) : (
                    // üõë FIX 2: ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° "‡πÑ‡∏°‡πà‡∏û‡∏ö" ‡∏Å‡πá‡∏ï‡πà‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (timeB > 0) ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô üõë
                    timeB !== null &&
                    timeB > 0 && (
                      <>
                        <h4 className="font-bold text-gray-700 mt-2">
                          ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ã‡πâ‡∏≥‡∏ã‡πâ‡∏≠‡∏ô: ({duplicateProjectsB.length}{" "}
                          ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)
                        </h4>
                        <div className="text-sm text-green-500 mt-2">
                          ‚úÖ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏ã‡πâ‡∏≥‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏µ‡πà 2
                        </div>
                      </>
                    )
                  )}

                  {/* Display Matched Teachers B - ‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏î‡∏¥‡∏° */}
                  {matchedTeachersB.length > 0 && (
                    <>
                      <h4 className="font-bold text-gray-700 mt-4">
                        ‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥: ({matchedTeachersB.length} ‡∏ó‡πà‡∏≤‡∏ô)
                      </h4>
                      {matchedTeachersB.slice(0, 3).map((teacher, index) => (
                        <div
                          key={`B-teacher-${index}`}
                          className="p-4 border-b border-gray-100 last:border-b-0"
                        >
                          <p className="text-[#111418] text-base font-bold leading-tight">
                            {teacher.name}
                          </p>
                          <p className="text-[#60758a] text-sm font-normal leading-normal">
                            ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•: {teacher.reason}
                          </p>
                        </div>
                      ))}
                    </>
                  )}

                  {/* üõë FIX 3: ‡πÅ‡∏™‡∏î‡∏á Error ‡∏´‡∏≤‡∏Å timeB ‡πÄ‡∏õ‡πá‡∏ô 0 üõë */}
                  {timeB === 0 && (
                    <div className="text-sm text-red-500 mt-2">
                      ‚ùå ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏µ‡πà 2 ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
                    </div>
                  )}
                </div>
              </div>
            )}
          </>
        )}
        {submissionSuccess && (
          <div className="p-4 text-green-600">
            ‚úÖ ‡∏™‡πà‡∏á‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÇ‡∏Ñ‡∏£‡∏á‡∏á‡∏≤‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!
          </div>
        )}
        {submissionError && (
          <div className="p-4 text-red-600">
            ‚ö†Ô∏è ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {submissionError}
          </div>
        )}
        {/* Submit Button */}
        <div className="flex justify-stretch">
          <div className="flex flex-1 gap-3 flex-wrap px-4 py-3 justify-end">
            <button
              type="submit"
              disabled={isSubmitting || isLoading}
              className="flex min-w-[84px] max-w-[480px] cursor-pointer items-center justify-center overflow-hidden rounded-lg h-10 px-4 bg-[#0c7ff2] text-white text-sm font-bold leading-normal tracking-[0.015em]"
            >
              <span className="truncate">
                {isSubmitting ? "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á..." : "‡∏™‡πà‡∏á‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÇ‡∏Ñ‡∏£‡∏á‡∏á‡∏≤‡∏ô"}
              </span>
            </button>
          </div>
        </div>
      </form>
    </div>
  );
};

export default Form;
